{"version":3,"sources":["App.tsx","components/HomePage/HomePage.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/TableRow/TableRow.tsx","components/Loader/Loader.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["App","isActiveClass","isActive","cn","className","role","to","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","sex","slug","name","TableRow","classNames","born","died","mother","motherName","father","fatherName","Loader","PeoplePage","useState","people","setPeople","loader","setLoader","errorMessage","setErrorMessage","useEffect","catch","error","finally","peopleFromServer","map","find","p","useParams","length","NotFoundPage","Root","path","element","index","replace","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.52be4b4c.chunk.js","sourcesContent":["import './App.scss';\n\nimport { NavLink, Outlet } from 'react-router-dom';\n\nimport cn from 'classnames';\n\nexport const App = () => {\n  const isActiveClass = ({ isActive }: { isActive: boolean }) => (\n    cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })\n  );\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={isActiveClass}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={isActiveClass}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n      <Outlet />\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <main className=\"section\">\n    <h1 className=\"title\">Home Page</h1>\n  </main>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\n\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    className={cn({\n      'has-text-danger': person.sex === 'f',\n    })}\n    to={`../${person.slug}`}\n  >\n    {person.name}\n  </Link>\n);\n","import { Link } from 'react-router-dom';\n\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  person: Person,\n  slug: string | undefined,\n};\n\nexport const TableRow: React.FC<Props> = ({ person, slug }) => {\n  return (\n    <>\n      <tr\n        data-cy=\"person\"\n        className={classNames({\n          'has-background-warning': slug === person.slug,\n        })}\n      >\n        <td>\n          <Link\n            to={`../${person.slug}`}\n            className={classNames({\n              'has-text-link': person.sex === 'm',\n              'has-text-danger': person.sex === 'f',\n            })}\n          >\n            {person.name}\n          </Link>\n        </td>\n\n        <td>{person.sex}</td>\n        <td>{person.born}</td>\n        <td>{person.died}</td>\n\n        <td>\n          {person.mother ? (\n            <PersonLink person={person.mother} />\n          ) : (\n            person.motherName || '-'\n          )}\n        </td>\n\n        <td>\n          {person.father ? (\n            <PersonLink person={person.father} />\n          ) : (\n            person.fatherName || '-'\n          )}\n        </td>\n      </tr>\n    </>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\n\nimport { TableRow } from '../TableRow/TableRow';\nimport { Loader } from '../Loader';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loader, setLoader] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    setLoader(true);\n    getPeople()\n      .then(setPeople)\n      .catch((error) => {\n        setLoader(false);\n        setErrorMessage('Something went wrong');\n        throw error;\n      })\n      .finally(() => setLoader(false));\n  }, []);\n\n  const peopleFromServer = people.map(person => ({\n    ...person,\n    mother: people.find(p => p.name === person.motherName),\n    father: people.find(p => p.name === person.fatherName),\n  }));\n\n  const { slug } = useParams();\n\n  return (\n    <main className=\"section\">\n\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"container\">\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {errorMessage && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                {errorMessage}\n              </p>\n            )}\n\n            {!loader && people.length === 0 && !errorMessage && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )}\n\n            {people.length !== 0 ? (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {peopleFromServer.map(person => (\n                    <TableRow\n                      key={person.slug}\n                      person={person}\n                      slug={slug}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            ) : (\n              loader && (\n                <Loader />\n              )\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","export const NotFoundPage = () => (\n  <main className=\"section\">\n    <h1 className=\"title\">Page not found</h1>\n  </main>\n);\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route path=\":slug?\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\nconst container = document.getElementById('root') as HTMLDivElement;\n\ncreateRoot(container).render(<Root />);\n"],"sourceRoot":""}